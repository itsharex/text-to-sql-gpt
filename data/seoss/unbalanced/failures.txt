SELECT issue_id FROM issue WHERE type = 'Bug' _EX _EM
SELECT issue_id FROM issue WHERE type = 'Bug' _EX _EM
SELECT issue_id FROM issue WHERE type = 'Bug' _EX _EM
SELECT issue_id FROM issue WHERE type = 'Bug' _EX _EM
SELECT issue_id, status, resolution, summary, description FROM issue WHERE type = 'Bug' AND priority = 'Major' _EX _EM
SELECT issue_id, status, resolution, summary, description FROM issue WHERE type = 'bug' AND priority = 'major' _EM
SELECT issue_id, status, resolution, summary, description FROM issue WHERE type = 'bug' AND priority = 'major' _EM
SELECT issue_id, status, resolution, summary, description FROM issue WHERE type = 'bug' AND priority = 'major' ORDER BY issue_id
SELECT issue_id, type, priority FROM issue WHERE status = 'Open' ORDER BY type, priority _EX _EM
SELECT issue_id, type, priority FROM issue WHERE status = 'open' ORDER BY type, priority _EM
SELECT issue_id, type, priority FROM issue WHERE status = 'Open' ORDER BY type, priority _EX _EM
SELECT issue_id, type, priority FROM issue WHERE status = 'Open' ORDER BY type, priority _EX _EM
SELECT commit_hash, message FROM change_set _EX _EM
SELECT commit_hash, message FROM change_set _EX _EM
SELECT commit_hash, message FROM change_set _EX _EM
SELECT commit_hash, message FROM change_set _EX _EM
SELECT type FROM issue GROUP BY type ORDER BY Count(*) DESC LIMIT 1 _EX _EM
SELECT issue.type, COUNT(*) AS mentions FROM issue_comment JOIN issue ON issue_comment.issue_id = issue.issue_id GROUP BY issue.type ORDER BY mentions DESC LIMIT 1
SELECT type FROM issue GROUP BY type ORDER BY Count(*) DESC LIMIT 1 _EX _EM
SELECT type FROM issue GROUP BY type ORDER BY Count(*) DESC LIMIT 1 _EX _EM
SELECT assignee, Count(issue_id) FROM issue WHERE status = "Open" GROUP BY assignee ORDER BY Count(issue_id) DESC LIMIT 1 _EX _EM
SELECT assignee, Count(issue_id) FROM issue WHERE status = "Open" GROUP BY assignee ORDER BY Count(issue_id) DESC LIMIT 1 _EX _EM
SELECT issue.assignee, COUNT(issue.issue_id) AS num_assigned_issues FROM issue WHERE issue.status = 'Open' GROUP BY issue.assignee HAVING COUNT(issue.issue_id) = (   SELECT MAX(num_assigned_issues)   FROM (     SELECT COUNT(issue.issue_id) AS num_assigned_issues     FROM issue     WHERE issue.status = 'Open'     GROUP BY issue.assignee   ) )
SELECT assignee, COUNT(*) FROM issue WHERE status = 'Open' GROUP BY assignee HAVING COUNT(*) = (   SELECT MAX(issue_count)   FROM (     SELECT COUNT(*) AS issue_count     FROM issue     WHERE status = 'Open'     GROUP BY assignee   ) )
SELECT status, COUNT(*) FROM issue GROUP BY status
SELECT status, COUNT(*) FROM issue GROUP BY status
SELECT status, COUNT(*) FROM issue GROUP BY status
SELECT status, COUNT(*) FROM issue GROUP BY status
SELECT il.source_issue_id, il.target_issue_id FROM issue_link AS il WHERE il.name = 'Blocker' _EX _EM
SELECT source_issue_id, target_issue_id FROM issue_link WHERE name = 'Blocker' _EX _EM
SELECT source_issue_id, target_issue_id FROM issue_link WHERE name = 'Blocker' _EX _EM
SELECT il.source_issue_id, il.target_issue_id FROM issue_link AS il WHERE il.name = 'Blocker' _EX _EM
SELECT DISTINCT i.issue_id, i.priority FROM issue i JOIN issue_link AS il ON i.issue_id = il.source_issue_id OR i.issue_id = il.target_issue_id WHERE i.priority = 'Blocker' OR i.priority = 'Critical'
SELECT * FROM issue WHERE priority = 'Blocker' OR priority = 'Critical' _EX _EM
SELECT * FROM issue WHERE priority = 'Blocker' OR priority = 'Critical' _EX _EM
SELECT * FROM issue WHERE priority = 'Blocker' OR priority = 'Critical' _EX _EM
SELECT DISTINCT change_set.author_email FROM change_set JOIN change_set_link ON change_set.commit_hash = change_set_link.commit_hash WHERE change_set_link.issue_id = 'PIG-3592' _EX _EM
SELECT DISTINCT change_set.author_email FROM change_set JOIN change_set_link ON change_set.commit_hash = change_set_link.commit_hash WHERE change_set_link.issue_id = 'PIG-3592' _EX _EM
SELECT DISTINCT change_set.author_email FROM change_set JOIN change_set_link ON change_set.commit_hash = change_set_link.commit_hash WHERE change_set_link.issue_id = 'PIG-3592' _EX _EM
SELECT DISTINCT change_set.author_email FROM change_set JOIN change_set_link ON change_set.commit_hash = change_set_link.commit_hash WHERE change_set_link.issue_id = 'PIG-3592' _EX _EM
SELECT DISTINCT field FROM issue_changelog WHERE fix_version = '0.12.1'
SELECT DISTINCT field FROM issue_changelog WHERE issue_id IN (   SELECT issue_id   FROM issue_fix_version   WHERE fix_version = '0.12.1' )
SELECT DISTINCT field FROM issue_changelog WHERE to_value = '0.12.1'
SELECT DISTINCT field FROM issue_changelog WHERE issue_id IN (  SELECT issue_id  FROM issue_fix_version  WHERE fix_version = '0.12.1' )
SELECT DISTINCT cc.file_path FROM code_change cc JOIN change_set AS cs ON cc.commit_hash = cs.commit_hash JOIN issue_fix_version AS ifv ON cs.issue_id = ifv.issue_id WHERE ifv.fix_version = '0.12.1'
SELECT DISTINCT cc.file_path FROM code_change cc JOIN change_set AS cs ON cc.commit_hash = cs.commit_hash JOIN issue_fix_version AS ifv ON cs.issue_id = ifv.issue_id WHERE ifv.fix_version = '0.12.1'
SELECT DISTINCT cc.file_path FROM code_change cc JOIN change_set AS cs ON cc.commit_hash = cs.commit_hash JOIN issue_fix_version AS ifv ON cs.issue_id = ifv.issue_id WHERE ifv.fix_version = '0.12.1'
SELECT DISTINCT cc.file_path FROM code_change cc JOIN change_set AS cs ON cc.commit_hash = cs.commit_hash JOIN issue_fix_version AS ifv ON cs.issue_id = ifv.issue_id WHERE ifv.fix_version = '0.12.1'
SELECT COUNT(*) FROM issue WHERE resolved_date < '2013-10-27' _EX _EM
SELECT COUNT(*) FROM issue WHERE resolved_date < '2013-10-27' _EX _EM
SELECT COUNT(*) FROM issue WHERE resolved_date < '2013-10-27' _EX _EM
SELECT COUNT(*) FROM issue WHERE resolved_date < '2013-10-27' _EX _EM
SELECT DISTINCT resolution FROM issue  _EX _EM
SELECT DISTINCT resolution FROM issue  _EX _EM
SELECT DISTINCT resolution FROM issue  _EX _EM
SELECT DISTINCT resolution FROM issue  _EX _EM
SELECT fix_version, COUNT(issue_id) FROM issue_fix_version GROUP BY fix_version _EX _EM
SELECT issue_fix_version.fix_version, COUNT(issue_fix_version.issue_id), GROUP_CONCAT(issue_fix_version.issue_id) FROM issue_fix_version JOIN issue ON issue_fix_version.issue_id = issue.issue_id WHERE issue.resolution IS NOT NULL GROUP BY issue_fix_version.fix_version ORDER BY issue_fix_version.fix_version ASC
SELECT fix_version, COUNT(issue_id) FROM issue_fix_version GROUP BY fix_version _EX _EM
SELECT fix_version, COUNT(issue_id) FROM issue_fix_version GROUP BY fix_version _EX _EM
SELECT updated_date, COUNT(*) FROM issue GROUP BY updated_date ORDER BY updated_date ASC _EX
SELECT updated_date, COUNT(*) FROM issue GROUP BY updated_date _EX _EM
SELECT updated_date, COUNT(*) FROM issue GROUP BY updated_date ORDER BY updated_date ASC _EX
SELECT updated_date, COUNT(*) FROM issue GROUP BY updated_date _EX _EM
SELECT resolved_date FROM issue GROUP BY resolved_date ORDER BY COUNT(*) DESC LIMIT 1 _EX
SELECT resolved_date FROM issue GROUP BY resolved_date ORDER BY Count(issue_id) DESC LIMIT 1 _EX _EM
SELECT resolved_date FROM issue GROUP BY resolved_date ORDER BY Count(issue_id) DESC LIMIT 1 _EX _EM
SELECT resolved_date FROM issue GROUP BY resolved_date ORDER BY COUNT(issue_id) DESC LIMIT 1 _EX _EM
SELECT COUNT(DISTINCT resolution) FROM issue  _EX _EM
SELECT resolution, COUNT(*) FROM issue GROUP BY resolution
SELECT COUNT(DISTINCT resolution) FROM issue  _EX _EM
SELECT COUNT(DISTINCT resolution) FROM issue  _EX _EM
SELECT COUNT(DISTINCT assignee_username) FROM issue _EX _EM
SELECT COUNT(DISTINCT assignee_username) FROM issue  _EX _EM
SELECT COUNT(DISTINCT assignee_username) FROM issue  _EX _EM
SELECT COUNT(DISTINCT assignee_username) FROM issue _EX _EM
SELECT username, COUNT(*) FROM issue_comment GROUP BY username _EX _EM
SELECT username, COUNT(*) FROM issue_comment GROUP BY username _EX _EM
SELECT username, Count(*) FROM issue_comment GROUP BY username _EX _EM
SELECT username, COUNT(*) FROM issue_comment GROUP BY username _EX _EM
SELECT display_name, COUNT(*) FROM issue_comment GROUP BY display_name _EX _EM
SELECT display_name, Count(*) FROM issue_comment GROUP BY display_name _EX _EM
SELECT DISTINCT display_name, created_date FROM issue_comment ORDER BY display_name, created_date
SELECT display_name, COUNT(DISTINCT username) FROM issue_comment GROUP BY display_name
SELECT component, COUNT(*) FROM issue_component GROUP BY component _EX
SELECT T2.component, Count(*) FROM issue AS T1 JOIN issue_component AS T2 ON T1.issue_id = T2.issue_id GROUP BY T2.component _EX _EM
SELECT component, COUNT(*) FROM issue_component GROUP BY component _EX
SELECT component, COUNT(*) FROM issue_component GROUP BY component _EX
SELECT ic.display_name, COUNT(ic.message) FROM issue_comment AS ic WHERE ic.issue_id = 'PIG-3592' GROUP BY ic.display_name _EX _EM
SELECT display_name, COUNT(*) FROM issue_comment WHERE issue_id = 'PIG-3592' GROUP BY display_name
SELECT display_name, COUNT(message) FROM issue_comment WHERE issue_id = 'PIG-3592' GROUP BY display_name _EX _EM
SELECT issue_comment.display_name, COUNT(issue_comment.message) FROM issue_comment WHERE issue_comment.issue_id = 'PIG-3592' GROUP BY issue_comment.display_name _EX _EM
SELECT DISTINCT change_set.commit_hash FROM change_set JOIN issue_changelog ON change_set.commit_hash = issue_changelog.to_value JOIN issue ON issue_changelog.issue_id = issue.issue_id WHERE issue.issue_id = 'PIG-3592' AND change_set.committed_date >= issue.created_date AND change_set.committed_date <= issue.resolved_date
SELECT DISTINCT change_set.commit_hash FROM change_set JOIN change_set_link ON change_set.commit_hash = change_set_link.commit_hash JOIN issue ON change_set_link.issue_id = issue.issue_id WHERE change_set.committed_date_zoned BETWEEN issue.created_date_zoned AND issue.resolved_date_zoned AND issue.issue_id = 'PIG-3592'
SELECT commit_hash FROM change_set WHERE committed_date >= (SELECT created_date FROM issue WHERE issue_id = 'PIG-3592') WHERE committed_date <= (SELECT resolved_date FROM issue WHERE issue_id = 'PIG-3592')
SELECT DISTINCT change_set_link.commit_hash FROM change_set_link JOIN change_set ON change_set_link.commit_hash = change_set.commit_hash JOIN issue ON change_set_link.issue_id = issue.issue_id WHERE issue.issue_id = 'PIG-3592' AND change_set.committed_date >= issue.created_date AND change_set.committed_date <= issue.resolved_date
SELECT type, COUNT(*) FROM issue WHERE type IN ('bug', 'improvement') GROUP BY type
SELECT type, COUNT(*) FROM issue WHERE type = 'Bug' OR type = 'Improvement' GROUP BY type _EX
SELECT type, COUNT(*) FROM issue WHERE type IN ('Bug', 'Improvement') GROUP BY type
ERROR
SELECT source.type, target.type, COUNT(*) FROM issue_link JOIN issue AS source ON issue_link.source_issue_id = source.issue_id JOIN issue AS target ON issue_link.target_issue_id = target.issue_id WHERE issue_link.name = 'cloners' GROUP BY source.type, target.type _EM
SELECT source.type AS source_type, target.type AS target_type, COUNT(*) FROM issue_link JOIN issue AS source ON issue_link.source_issue_id = source.issue_id JOIN issue AS target ON issue_link.target_issue_id = target.issue_id WHERE issue_link.name = 'Cloners' GROUP BY source_type, target_type
SELECT i1.type, i2.type, COUNT(*) FROM issue_link il JOIN issue AS i1 ON il.source_issue_id = i1.issue_id JOIN issue AS i2 ON il.target_issue_id = i2.issue_id WHERE il.name = 'Cloners' GROUP BY i1.type, i2.type
SELECT   i1.type,   i2.type,   COUNT(*) FROM   issue_link il   JOIN issue AS i1 ON il.source_issue_id = i1.issue_id   JOIN issue AS i2 ON il.target_issue_id = i2.issue_id WHERE   il.name = 'Cloners' GROUP BY   i1.type, i2.type
SELECT * FROM issue WHERE status = 'In Progress'
SELECT * FROM issue WHERE status != 'In Progress'
SELECT * FROM issue WHERE status != 'In Progress'
SELECT issue_id, status FROM issue WHERE status != 'In Progress'